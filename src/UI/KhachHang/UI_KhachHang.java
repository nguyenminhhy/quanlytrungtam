/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.KhachHang;

import BUS.bus_Khachhang;
import DTO.dto_KhachHang;
import DTO.dto_LichSuKH;
import java.awt.Color;
import java.awt.Font;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author ThinkPro
 */
public class UI_KhachHang extends javax.swing.JPanel {

    /**
     * Creates new form KhachHangUI
     */
    /**
     * ****** Phần Của Hy***********
     */
    bus_Khachhang busKH = new bus_Khachhang();
    dto_KhachHang dtoKH = new dto_KhachHang();
    dto_LichSuKH dtoLSKH = new dto_LichSuKH();
    String txtTimKiem = "";
    static int MaKH;

    /**
     * ****************************
     */
    public UI_KhachHang() {
        initComponents();
        tbKhachHang.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
        tbKhachHang.getTableHeader().setOpaque(false);
        tbKhachHang.getTableHeader().setForeground(new Color(0, 0, 0));
        tbKhachHang.setSelectionBackground(new java.awt.Color(0, 64, 128));
        busKH.hienThiDanhSachKH(tbKhachHang);
        tbKhachHang.getColumnModel().getColumn(0).setPreferredWidth(25);
        tbKhachHang.getColumnModel().getColumn(2).setPreferredWidth(150);
    }

    public JTable getTableKH() {
        return tbKhachHang;
    }

    public void showTable() {
        busKH.hienThiDanhSachKH(tbKhachHang);
    }

    public int rowSelected() {
        return tbKhachHang.getSelectedRow();
    }

    private void layGiaTriNhap() {
        txtTimKiem = txtTimKH.getText();
        busKH.dsTimKH(txtTimKiem);
    }

    /**
     * Khu vực của Tân
     */
    public void hideBtnKh() {
        btnCapNhatKH.setVisible(false);
        btnThemKH.setVisible(false);
        btnXoaKH.setVisible(false);
        btnLichsuKH.setVisible(false);
    }

    /*Hết khu vực của Tân*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCapNhatKH = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTimKH = new javax.swing.JTextField();
        btnThemKH = new javax.swing.JButton();
        jspKH = new javax.swing.JScrollPane();
        tbKhachHang = new javax.swing.JTable();
        btnLichsuKH = new javax.swing.JButton();
        btnXoaKH = new javax.swing.JButton();
        chkKHDangHoc = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(230, 245, 255));
        setPreferredSize(new java.awt.Dimension(1200, 620));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        btnCapNhatKH.setBackground(new java.awt.Color(230, 245, 255));
        btnCapNhatKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCapNhatKH.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhatKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/capnhat.png"))); // NOI18N
        btnCapNhatKH.setContentAreaFilled(false);
        btnCapNhatKH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCapNhatKH.setFocusable(false);
        btnCapNhatKH.setMaximumSize(new java.awt.Dimension(129, 49));
        btnCapNhatKH.setMinimumSize(new java.awt.Dimension(129, 49));
        btnCapNhatKH.setOpaque(true);
        btnCapNhatKH.setPreferredSize(new java.awt.Dimension(129, 49));
        btnCapNhatKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatKHActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Tìm Kiếm");

        txtTimKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKH.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtTimKH.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));
        txtTimKH.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTimKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKHActionPerformed(evt);
            }
        });
        txtTimKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKHKeyReleased(evt);
            }
        });

        btnThemKH.setBackground(new java.awt.Color(230, 245, 255));
        btnThemKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThemKH.setForeground(new java.awt.Color(255, 255, 255));
        btnThemKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/taomoi.png"))); // NOI18N
        btnThemKH.setContentAreaFilled(false);
        btnThemKH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemKH.setFocusable(false);
        btnThemKH.setMaximumSize(new java.awt.Dimension(217, 60));
        btnThemKH.setMinimumSize(new java.awt.Dimension(217, 60));
        btnThemKH.setOpaque(true);
        btnThemKH.setPreferredSize(new java.awt.Dimension(209, 30));
        btnThemKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKHActionPerformed(evt);
            }
        });

        jspKH.setBackground(new java.awt.Color(255, 255, 255));
        jspKH.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jspKH.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jspKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jspKH.setPreferredSize(new java.awt.Dimension(469, 200));

        tbKhachHang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã KH", "Họ Tên", "Ngày Sinh", "Giới Tính", "Điện Thoại", "Địa Chỉ", "Trạng Thái", "Điểm Đầu Vào"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbKhachHang.setFocusable(false);
        tbKhachHang.setRowHeight(30);
        tbKhachHang.setRowMargin(5);
        tbKhachHang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jspKH.setViewportView(tbKhachHang);
        if (tbKhachHang.getColumnModel().getColumnCount() > 0) {
            tbKhachHang.getColumnModel().getColumn(0).setMinWidth(50);
            tbKhachHang.getColumnModel().getColumn(0).setMaxWidth(50);
            tbKhachHang.getColumnModel().getColumn(1).setMinWidth(100);
            tbKhachHang.getColumnModel().getColumn(1).setMaxWidth(100);
            tbKhachHang.getColumnModel().getColumn(2).setMinWidth(180);
            tbKhachHang.getColumnModel().getColumn(2).setPreferredWidth(200);
            tbKhachHang.getColumnModel().getColumn(2).setMaxWidth(180);
            tbKhachHang.getColumnModel().getColumn(3).setMinWidth(100);
            tbKhachHang.getColumnModel().getColumn(3).setPreferredWidth(50);
            tbKhachHang.getColumnModel().getColumn(3).setMaxWidth(100);
            tbKhachHang.getColumnModel().getColumn(4).setMinWidth(100);
            tbKhachHang.getColumnModel().getColumn(4).setMaxWidth(100);
            tbKhachHang.getColumnModel().getColumn(5).setMinWidth(100);
            tbKhachHang.getColumnModel().getColumn(5).setMaxWidth(100);
            tbKhachHang.getColumnModel().getColumn(7).setMinWidth(150);
            tbKhachHang.getColumnModel().getColumn(7).setMaxWidth(150);
            tbKhachHang.getColumnModel().getColumn(8).setMinWidth(100);
            tbKhachHang.getColumnModel().getColumn(8).setMaxWidth(100);
        }

        btnLichsuKH.setBackground(new java.awt.Color(230, 245, 255));
        btnLichsuKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLichsuKH.setForeground(new java.awt.Color(255, 255, 255));
        btnLichsuKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lichsukhachhang.png"))); // NOI18N
        btnLichsuKH.setContentAreaFilled(false);
        btnLichsuKH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLichsuKH.setFocusable(false);
        btnLichsuKH.setMaximumSize(new java.awt.Dimension(129, 49));
        btnLichsuKH.setMinimumSize(new java.awt.Dimension(129, 49));
        btnLichsuKH.setOpaque(true);
        btnLichsuKH.setPreferredSize(new java.awt.Dimension(129, 49));
        btnLichsuKH.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lichsukhachhang.png"))); // NOI18N
        btnLichsuKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLichsuKHActionPerformed(evt);
            }
        });

        btnXoaKH.setBackground(new java.awt.Color(230, 245, 255));
        btnXoaKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaKH.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/xoa.png"))); // NOI18N
        btnXoaKH.setToolTipText("");
        btnXoaKH.setContentAreaFilled(false);
        btnXoaKH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoaKH.setFocusable(false);
        btnXoaKH.setMaximumSize(new java.awt.Dimension(129, 49));
        btnXoaKH.setMinimumSize(new java.awt.Dimension(129, 49));
        btnXoaKH.setOpaque(true);
        btnXoaKH.setPreferredSize(new java.awt.Dimension(129, 49));
        btnXoaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKHActionPerformed(evt);
            }
        });

        chkKHDangHoc.setBackground(new java.awt.Color(230, 245, 255));
        chkKHDangHoc.setText("Hiển thị những khách hàng đang học");
        chkKHDangHoc.setFocusable(false);
        chkKHDangHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkKHDangHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chkKHDangHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLichsuKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapNhatKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jspKH, javax.swing.GroupLayout.DEFAULT_SIZE, 1128, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnCapNhatKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkKHDangHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnLichsuKH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jspKH, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void btnCapNhatKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatKHActionPerformed
        int row = tbKhachHang.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần cập nhật!!!");
        } else {
            dtoKH = this.busKH.getList().get(row);
            if (dtoKH != null) {
                FormCapNhatKH CNKH = new FormCapNhatKH();
                CNKH.setDefaultInformations(dtoKH);
                CNKH.thongTinChiTiet(dtoKH);
            }
        }
    }//GEN-LAST:event_btnCapNhatKHActionPerformed

    private void btnLichsuKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLichsuKHActionPerformed
        int row = tbKhachHang.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khách hàng muốn xem lịch sử!!!");
        } else {
            dtoKH = this.busKH.getList().get(row);

            System.out.println(dtoKH.getLop());
            if (dtoKH.getLop() != 0) {
                FormLichSuKH LSKH = new FormLichSuKH(dtoKH);
                LSKH.setDefaultInformations(dtoKH);
            } else {
                JOptionPane.showMessageDialog(null, "Khách Hàng Này Chưa Tham Gia Vào Lớp!");
            }

        }
    }//GEN-LAST:event_btnLichsuKHActionPerformed

    private void btnXoaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKHActionPerformed
        int row = tbKhachHang.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần xóa!!!");
        } else {
            dtoKH = this.busKH.getList().get(row);
            if (dtoKH != null) {
                System.out.println(dtoKH.getMaKH());
                String message = "Bạn có muốn xóa khách hàng " + dtoKH.getHoTen() + " Không?";
                ImageIcon icon = new ImageIcon("images/trash.png");

                int result = JOptionPane.showConfirmDialog(null,
                        message,
                        "Xóa khách hàng", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, icon);
                if (result == 0) {
                    boolean kq = busKH.xoaKH(dtoKH.getMaKH());
                    if (kq == true) {
                        JOptionPane.showMessageDialog(null, "Xóa Khách Hàng Thành Công");
                        busKH.hienThiDanhSachKH(tbKhachHang);
                    } else {
                        JOptionPane.showMessageDialog(null, "Không xóa được");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnXoaKHActionPerformed

    private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
        new FormThemKH().show();
    }//GEN-LAST:event_btnThemKHActionPerformed

    private void txtTimKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKHActionPerformed

    private void txtTimKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKHKeyReleased
        txtTimKiem = txtTimKH.getText();
        busKH.hienThiDSTimKiem(tbKhachHang, txtTimKiem);
    }//GEN-LAST:event_txtTimKHKeyReleased

    private void chkKHDangHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkKHDangHocActionPerformed
        if (chkKHDangHoc.isSelected()) {
            busKH.HienThiDSKHDangHoc(tbKhachHang);
        } else {
            busKH.hienThiDanhSachKH(tbKhachHang);
        }
    }//GEN-LAST:event_chkKHDangHocActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatKH;
    private javax.swing.JButton btnLichsuKH;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnXoaKH;
    private javax.swing.JCheckBox chkKHDangHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jspKH;
    private javax.swing.JTable tbKhachHang;
    private javax.swing.JTextField txtTimKH;
    // End of variables declaration//GEN-END:variables
}
